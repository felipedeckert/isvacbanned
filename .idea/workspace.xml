<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="612bd1de-8293-4e67-97c7-28960d587824" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/util/messageUtils.go" beforeDir="false" afterPath="$PROJECT_DIR$/util/messageUtils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/cloud.google.com/go/compute/metadata/metadata.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/cloud.google.com/go/compute/metadata/metadata.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/call_option.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/call_option.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/gax.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/gax.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/invoke.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/googleapis/gax-go/v2/invoke.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/internal/internal.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/internal/internal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/internal/tagencoding/tagencoding.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/internal/tagencoding/tagencoding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/metric/metricdata/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/metric/metricdata/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/opencensus.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/opencensus.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/plugin/ochttp/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/plugin/ochttp/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/plugin/ochttp/propagation/b3/b3.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/plugin/ochttp/propagation/b3/b3.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/stats/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/stats/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/stats/view/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/stats/view/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/tag/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/tag/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/trace/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/trace/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/go.opencensus.io/trace/propagation/propagation.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/go.opencensus.io/trace/propagation/propagation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/context/context.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/context/context.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/http2/http2.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/http2/http2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/idna/idna10.0.0.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/idna/idna10.0.0.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/idna/idna9.0.0.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/idna/idna9.0.0.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/internal/timeseries/timeseries.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/internal/timeseries/timeseries.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/trace/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/net/trace/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/google/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/google/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/jws/jws.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/jws/jws.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/oauth2.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/oauth2/oauth2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkasm_darwin.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkmerge.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkpost.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksyscall.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc64.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksyscall_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksysctl_openbsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mksysnum.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_aix.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_darwin.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_dragonfly.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_freebsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_netbsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_openbsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/types_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/transform/transform.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/text/transform/transform.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/bidi/bidi.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/bidi/bidi.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/bidi/gen.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/bidi/gen_ranges.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/bidi/gen_trieval.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/norm/maketables.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/norm/normalize.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/norm/normalize.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/text/unicode/norm/triegen.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/api/googleapi/googleapi.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/api/googleapi/googleapi.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/api/sheets/v4/sheets-gen.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/api/sheets/v4/sheets-gen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codegen.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codegen.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codes/codes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/codes/codes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/credentials/credentials.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/credentials/credentials.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/grpclog/grpclog.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/grpclog/grpclog.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/install_gae.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/install_gae.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/metadata/metadata.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/metadata/metadata.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/regenerate.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/regenerate.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stats/stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/stats/stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/google.golang.org/grpc/vet.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/google.golang.org/grpc/vet.sh" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/Cellar/go/1.16.3/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../../pkg/mod/github.com/stretchr/testify@v1.7.0/suite/suite.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../pkg/mod/git.topfreegames.com/packages/configuration/server-interface@v1.1.0/definitions.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../pkg/mod/git.topfreegames.com/packages/metagame-base/cluster@v1.1.4/servers/metagame/metagame.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectId" id="1i9lgLpSIWKHovarjhVQi6mpd5p" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="configurable.group.tools" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/service" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/model" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestGetSteamID in isvacbanned/service">
    <configuration name="TestGetArgumentFromURL in isvacbanned/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="isvacbanned" />
      <working_directory value="$PROJECT_DIR$/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="isvacbanned/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetArgumentFromURL\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetSteamID in isvacbanned/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="isvacbanned" />
      <working_directory value="$PROJECT_DIR$/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="isvacbanned/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetSteamID\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetSteamIDInvalidURL in isvacbanned/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="isvacbanned" />
      <working_directory value="$PROJECT_DIR$/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="isvacbanned/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetSteamIDInvalidURL\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSetUpFollowHandler in isvacbanned/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="isvacbanned" />
      <working_directory value="$PROJECT_DIR$/service" />
      <kind value="PACKAGE" />
      <package value="isvacbanned/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSetUpFollowHandler\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetSteamID in isvacbanned/service" />
        <item itemvalue="Go Test.TestGetSteamIDInvalidURL in isvacbanned/service" />
        <item itemvalue="Go Test.TestGetArgumentFromURL in isvacbanned/service" />
        <item itemvalue="Go Test.TestSetUpFollowHandler in isvacbanned/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/service/urlService.go</url>
          <line>17</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>
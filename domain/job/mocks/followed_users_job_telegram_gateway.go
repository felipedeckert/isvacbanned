// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"isvacbanned/domain/job"
	"sync"
)

// Ensure, that FollowedUsersJobTelegramGatewayMock does implement job.FollowedUsersJobTelegramGateway.
// If this is not the case, regenerate this file with moq.
var _ job.FollowedUsersJobTelegramGateway = &FollowedUsersJobTelegramGatewayMock{}

// FollowedUsersJobTelegramGatewayMock is a mock implementation of job.FollowedUsersJobTelegramGateway.
//
// 	func TestSomethingThatUsesFollowedUsersJobTelegramGateway(t *testing.T) {
//
// 		// make and configure a mocked job.FollowedUsersJobTelegramGateway
// 		mockedFollowedUsersJobTelegramGateway := &FollowedUsersJobTelegramGatewayMock{
// 			SendMessageToUserFunc: func(message string, chatID int64)  {
// 				panic("mock out the SendMessageToUser method")
// 			},
// 		}
//
// 		// use mockedFollowedUsersJobTelegramGateway in code that requires job.FollowedUsersJobTelegramGateway
// 		// and then make assertions.
//
// 	}
type FollowedUsersJobTelegramGatewayMock struct {
	// SendMessageToUserFunc mocks the SendMessageToUser method.
	SendMessageToUserFunc func(message string, chatID int64)

	// calls tracks calls to the methods.
	calls struct {
		// SendMessageToUser holds details about calls to the SendMessageToUser method.
		SendMessageToUser []struct {
			// Message is the message argument value.
			Message string
			// ChatID is the chatID argument value.
			ChatID int64
		}
	}
	lockSendMessageToUser sync.RWMutex
}

// SendMessageToUser calls SendMessageToUserFunc.
func (mock *FollowedUsersJobTelegramGatewayMock) SendMessageToUser(message string, chatID int64) {
	callInfo := struct {
		Message string
		ChatID  int64
	}{
		Message: message,
		ChatID:  chatID,
	}
	mock.lockSendMessageToUser.Lock()
	mock.calls.SendMessageToUser = append(mock.calls.SendMessageToUser, callInfo)
	mock.lockSendMessageToUser.Unlock()
	if mock.SendMessageToUserFunc == nil {
		return
	}
	mock.SendMessageToUserFunc(message, chatID)
}

// SendMessageToUserCalls gets all the calls that were made to SendMessageToUser.
// Check the length with:
//     len(mockedFollowedUsersJobTelegramGateway.SendMessageToUserCalls())
func (mock *FollowedUsersJobTelegramGatewayMock) SendMessageToUserCalls() []struct {
	Message string
	ChatID  int64
} {
	var calls []struct {
		Message string
		ChatID  int64
	}
	mock.lockSendMessageToUser.RLock()
	calls = mock.calls.SendMessageToUser
	mock.lockSendMessageToUser.RUnlock()
	return calls
}

// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"isvacbanned/domain/telegrambot"
	"sync"
)

// Ensure, that ShowSummaryUserPersistenceGatewayMock does implement telegrambot.ShowSummaryUserPersistenceGateway.
// If this is not the case, regenerate this file with moq.
var _ telegrambot.ShowSummaryUserPersistenceGateway = &ShowSummaryUserPersistenceGatewayMock{}

// ShowSummaryUserPersistenceGatewayMock is a mock implementation of telegrambot.ShowSummaryUserPersistenceGateway.
//
// 	func TestSomethingThatUsesShowSummaryUserPersistenceGateway(t *testing.T) {
//
// 		// make and configure a mocked telegrambot.ShowSummaryUserPersistenceGateway
// 		mockedShowSummaryUserPersistenceGateway := &ShowSummaryUserPersistenceGatewayMock{
// 			CreateUserFunc: func(ctx context.Context, firstName string, username string, telegramID int64) (int64, error) {
// 				panic("mock out the CreateUser method")
// 			},
// 			GetUserIDFunc: func(ctx context.Context, telegramID int64) (int64, error) {
// 				panic("mock out the GetUserID method")
// 			},
// 		}
//
// 		// use mockedShowSummaryUserPersistenceGateway in code that requires telegrambot.ShowSummaryUserPersistenceGateway
// 		// and then make assertions.
//
// 	}
type ShowSummaryUserPersistenceGatewayMock struct {
	// CreateUserFunc mocks the CreateUser method.
	CreateUserFunc func(ctx context.Context, firstName string, username string, telegramID int64) (int64, error)

	// GetUserIDFunc mocks the GetUserID method.
	GetUserIDFunc func(ctx context.Context, telegramID int64) (int64, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateUser holds details about calls to the CreateUser method.
		CreateUser []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// FirstName is the firstName argument value.
			FirstName string
			// Username is the username argument value.
			Username string
			// TelegramID is the telegramID argument value.
			TelegramID int64
		}
		// GetUserID holds details about calls to the GetUserID method.
		GetUserID []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// TelegramID is the telegramID argument value.
			TelegramID int64
		}
	}
	lockCreateUser sync.RWMutex
	lockGetUserID  sync.RWMutex
}

// CreateUser calls CreateUserFunc.
func (mock *ShowSummaryUserPersistenceGatewayMock) CreateUser(ctx context.Context, firstName string, username string, telegramID int64) (int64, error) {
	callInfo := struct {
		Ctx        context.Context
		FirstName  string
		Username   string
		TelegramID int64
	}{
		Ctx:        ctx,
		FirstName:  firstName,
		Username:   username,
		TelegramID: telegramID,
	}
	mock.lockCreateUser.Lock()
	mock.calls.CreateUser = append(mock.calls.CreateUser, callInfo)
	mock.lockCreateUser.Unlock()
	if mock.CreateUserFunc == nil {
		var (
			nOut   int64
			errOut error
		)
		return nOut, errOut
	}
	return mock.CreateUserFunc(ctx, firstName, username, telegramID)
}

// CreateUserCalls gets all the calls that were made to CreateUser.
// Check the length with:
//     len(mockedShowSummaryUserPersistenceGateway.CreateUserCalls())
func (mock *ShowSummaryUserPersistenceGatewayMock) CreateUserCalls() []struct {
	Ctx        context.Context
	FirstName  string
	Username   string
	TelegramID int64
} {
	var calls []struct {
		Ctx        context.Context
		FirstName  string
		Username   string
		TelegramID int64
	}
	mock.lockCreateUser.RLock()
	calls = mock.calls.CreateUser
	mock.lockCreateUser.RUnlock()
	return calls
}

// GetUserID calls GetUserIDFunc.
func (mock *ShowSummaryUserPersistenceGatewayMock) GetUserID(ctx context.Context, telegramID int64) (int64, error) {
	callInfo := struct {
		Ctx        context.Context
		TelegramID int64
	}{
		Ctx:        ctx,
		TelegramID: telegramID,
	}
	mock.lockGetUserID.Lock()
	mock.calls.GetUserID = append(mock.calls.GetUserID, callInfo)
	mock.lockGetUserID.Unlock()
	if mock.GetUserIDFunc == nil {
		var (
			nOut   int64
			errOut error
		)
		return nOut, errOut
	}
	return mock.GetUserIDFunc(ctx, telegramID)
}

// GetUserIDCalls gets all the calls that were made to GetUserID.
// Check the length with:
//     len(mockedShowSummaryUserPersistenceGateway.GetUserIDCalls())
func (mock *ShowSummaryUserPersistenceGatewayMock) GetUserIDCalls() []struct {
	Ctx        context.Context
	TelegramID int64
} {
	var calls []struct {
		Ctx        context.Context
		TelegramID int64
	}
	mock.lockGetUserID.RLock()
	calls = mock.calls.GetUserID
	mock.lockGetUserID.RUnlock()
	return calls
}

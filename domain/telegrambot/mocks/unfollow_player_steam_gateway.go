// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"isvacbanned/domain/telegrambot"
	"sync"
)

// Ensure, that UnfollowPlayerSteamGatewayMock does implement telegrambot.UnfollowPlayerSteamGateway.
// If this is not the case, regenerate this file with moq.
var _ telegrambot.UnfollowPlayerSteamGateway = &UnfollowPlayerSteamGatewayMock{}

// UnfollowPlayerSteamGatewayMock is a mock implementation of telegrambot.UnfollowPlayerSteamGateway.
//
// 	func TestSomethingThatUsesUnfollowPlayerSteamGateway(t *testing.T) {
//
// 		// make and configure a mocked telegrambot.UnfollowPlayerSteamGateway
// 		mockedUnfollowPlayerSteamGateway := &UnfollowPlayerSteamGatewayMock{
// 			GetSteamIDFunc: func(param string) (string, error) {
// 				panic("mock out the GetSteamID method")
// 			},
// 		}
//
// 		// use mockedUnfollowPlayerSteamGateway in code that requires telegrambot.UnfollowPlayerSteamGateway
// 		// and then make assertions.
//
// 	}
type UnfollowPlayerSteamGatewayMock struct {
	// GetSteamIDFunc mocks the GetSteamID method.
	GetSteamIDFunc func(param string) (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetSteamID holds details about calls to the GetSteamID method.
		GetSteamID []struct {
			// Param is the param argument value.
			Param string
		}
	}
	lockGetSteamID sync.RWMutex
}

// GetSteamID calls GetSteamIDFunc.
func (mock *UnfollowPlayerSteamGatewayMock) GetSteamID(param string) (string, error) {
	callInfo := struct {
		Param string
	}{
		Param: param,
	}
	mock.lockGetSteamID.Lock()
	mock.calls.GetSteamID = append(mock.calls.GetSteamID, callInfo)
	mock.lockGetSteamID.Unlock()
	if mock.GetSteamIDFunc == nil {
		var (
			sOut   string
			errOut error
		)
		return sOut, errOut
	}
	return mock.GetSteamIDFunc(param)
}

// GetSteamIDCalls gets all the calls that were made to GetSteamID.
// Check the length with:
//     len(mockedUnfollowPlayerSteamGateway.GetSteamIDCalls())
func (mock *UnfollowPlayerSteamGatewayMock) GetSteamIDCalls() []struct {
	Param string
} {
	var calls []struct {
		Param string
	}
	mock.lockGetSteamID.RLock()
	calls = mock.calls.GetSteamID
	mock.lockGetSteamID.RUnlock()
	return calls
}
